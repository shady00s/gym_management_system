import '../players/players_data.drift';
import '../teams/teams.drift';
import '../teams/players_teams.drift';

CREATE TABLE IF NOT EXISTS PlayersLogsTable(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    player_id INT NOT NULL,
    player_index_id INT NOT NULL,
    team_id INT NOT NULL,
    player_entrance_date DATETIME NOT NULL,
    FOREIGN KEY (player_id) REFERENCES Players(player_index_id),
    FOREIGN KEY (team_id) REFERENCES TeamsDataTable(team_id)
);
CREATE INDEX login_time_inx on PlayersLogsTable(player_entrance_date);

getTodayLogs(REQUIRED :dateTime AS DATETIME, REQUIRED :endDateTime AS DATETIME, REQUIRED :teamId AS INT):
                SELECT DISTINCT Players.player_name,PlayersLogsTable.player_entrance_date, Players.player_id, Players.player_index_id,Players.image_path, PlayersLogsTable.player_entrance_date FROM Players
                INNER JOIN  PlayersLogsTable ON PlayersLogsTable.player_index_id = Players.player_index_id
                WHERE PlayersLogsTable.player_entrance_date >= :dateTime AND PlayersLogsTable.player_entrance_date < :endDateTime
                AND PlayersLogsTable.team_id = :teamId;



getLastPlayerLog(REQUIRED :playerIndexId, REQUIRED :teamId): SELECT DISTINCT MAX(player_entrance_date) FROM PlayersLogsTable
                                                             WHERE PlayersLogsTable.player_index_id = :playerIndex
                                                             AND PlayersLogsTable.team_id = :teamId;

getTodayPlayerLogs(REQUIRED :playerIndexId AS INT, REQUIRED :teamId AS INT,REQUIRED :begDate AS DATETIME, REQUIRED :endDate AS DATETIME): SELECT PlayersLogsTable.player_entrance_date FROM PlayersLogsTable
                                              WHERE PlayersLogsTable.player_index_id = :playerIndexId
                                              AND  PlayersLogsTable.team_id = :teamId
                                              AND PlayersLogsTable.player_entrance_date BETWEEN :begDate AND :endDate
                                              ORDER BY PlayersLogsTable.player_entrance_date ASC;

getListOfPlayersLogs(REQUIRED :teamId AS INT, REQUIRED :currentDate AS DATETIME, REQUIRED :endDate):
                                   SELECT
                                       Players.player_index_id, Players.image_path, Players.player_name, Players.player_id, PlayersLogsTable.player_entrance_date
                                   FROM PlayersLogsTable
                                   INNER JOIN Players ON Players.player_index_id = PlayersLogsTable.player_index_id
                                   WHERE (PlayersLogsTable.team_id = COALESCE(:teamId, PlayersLogsTable.team_id) OR :teamId IS NULL ) AND PlayersLogsTable.player_entrance_date BETWEEN :currentDate AND :endDate AND PlayersLogsTable.player_index_id = Players.player_index_id;