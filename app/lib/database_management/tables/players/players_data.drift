import '../teams/players_teams.drift';

import 'players_data.drift';

CREATE TABLE IF NOT EXISTS Players (
    id INT NOT NULL PRIMARY KEY AUTOINCREMENT,
    player_index_id INT NOT NULL,
    player_id INT NOT NULL,
    player_name TEXT NOT NULL,
    player_phone_number INT NOT NULL,
    image_path TEXT NOT NULL,
    player_age INT NOT NULL,
    player_first_join_date DATETIME NOT NULL,
    player_gender TEXT NOT NULL,
    subscription_id  INT NOT NULL
);

CREATE TABLE IF NOT EXISTS PlayersSubscriptions(
    sub_id INT PRIMARY KEY AUTOINCREMENT,
    player_subscription_id INT NOT NULL,
    beginning_date DATETIME NOT NULL,
    end_date DATETIME NOT NULL,
    billId INT NOT NULL,
    billValue INT NOT NULL,
    duration INT NOT NULL,
    billCollector TEXT NOT NULL
);

allPlayers: SELECT * FROM Players;
getAllNames: SELECT player_id, player_index_id, player_name FROM Players ORDER BY player_id ASC;
allSubscriptions: SELECT * FROM PlayersSubscriptions;

getPlayerSubscription: SELECT Players.*, PlayersSubscriptions.* FROM Players INNER JOIN PlayersSubscriptions ON Players.player_index_id = PlayersSubscriptions.player_subscription_id WHERE Players.player_index_id = :player_index_id  ORDER BY end_date DESC;

getPlayersByTeam: SELECT Players.* From Players INNER JOIN PlayersAndTeamsTable ON PlayersAndTeamsTable.team_player_id = Players.player_index_id WHERE PlayersAndTeamsTable.team_id = :team_id;


getEndedSubscriptionByTeam: SELECT DISTINCT Players.*, PlayersSubscriptions.*
                            from Players INNER JOIN PlayersSubscriptions ON Players.player_index_id = PlayersSubscriptions.player_subscription_id
                            INNER JOIN PlayersAndTeamsTable ON PlayersAndTeamsTable.team_player_id = Players.player_index_id
                            WHERE PlayersAndTeamsTable.team_id = :team_id
                            AND Players.player_index_id = PlayersSubscriptions.player_subscription_id
                            AND PlayersSubscriptions.end_date
                            BETWEEN :beginDateTime AND :secondDateTime
                            ORDER BY PlayersSubscriptions.end_date DESC;